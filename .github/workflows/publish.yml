name: publish_automatic

on:
  workflow_run:
    workflows: ["svls_automatic", "slang-automatic"]
    types:
      - completed
  workflow_dispatch:

jobs:

  collect-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download svls-binary artifact
        uses: actions/download-artifact@v4
        with:
          name: svls-binary
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.TOKEN }}

      - name: Download slang-binary artifact
        uses: actions/download-artifact@v4
        with:
          name: slang-binary
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.TOKEN }}

      - name: Create Archive
        run: |
          tar -czf actual_binary.tar.gz svls-binary slang-binary

      - name: Upload Combined Archive
        uses: actions/upload-artifact@v2
        with:
          name: actual-binary
          path: actual_binary.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: [collect-artifacts]
    steps:
      - name: Set Tag Date
        id: set_tag_date
        run: |
          echo "tag_date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.set_tag_date.outputs.tag_date }}
          release_name: ${{ steps.set_tag_date.outputs.tag_date }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./actual_binary.tar.gz
          asset_name: actual_binary.tar.gz
          asset_content_type: application/gzip

      - name: Publish Release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
