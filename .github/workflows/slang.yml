name: slang_automatic

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:

  check-updates:
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: MikePopoloski/slang
          ref: master
      
      - name: Analyse
        run: |
          LAST_COMMIT_DATE=$(git log -1 --format="%at" origin/master)
          CURRENT_DATE=$(date +%s)
          TIME_DIFF=$(( CURRENT_DATE - LAST_COMMIT_DATE ))
          
          if [ $TIME_DIFF -le 86400 ]; then
            echo "There are updates within the last 24 hours."
            echo "updates-found=true" >> $GITHUB_OUTPUT
          else
            echo "No updates within the last 24 hours."
            echo "updates-found=false" >> $GITHUB_OUTPUT
          fi


  build:
    needs: check-updates
    if: |
      ${{ github.event_name == 'workflow_dispatch' 
          || needs.check-updates.outputs.updates-found == true
          || !contains(needs.check-updates.outputs.artifacts, 'slang-binary')
        }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        preset: [gcc-release]


    runs-on: ${{ matrix.os }}

    steps:

      - name: Install dependencies
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main"
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y g++-13 g++-11 clang-18 clang-tidy-18

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: MikePopoloski/slang
          ref: master

      - name: Configure
        run: cmake --preset ${{ matrix.preset }} -DSLANG_CI_BUILD=ON
    
      - name: Build
        run: cmake --build build/${{ matrix.preset }} -j8

      - name: Create Zip Archive
        run: zip -r slang-binary.zip build/${{ matrix.preset }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: slang-binary
          path: slang-binary.zip
